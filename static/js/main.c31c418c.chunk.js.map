{"version":3,"sources":["assets/orc_face.png","types.ts","components/ThemedApp/preset.ts","components/ThemedApp/ThemedApp.tsx","components/TopicsBuilder/TopicsBuilderNavbar/TopicsBuilderNavbar.tsx","utils/strings.ts","hooks/useTimedValue.ts","components/TopicsBuilder/TopicsBuilderForm/TopicsBuilderForm.tsx","utils/temporalUnits.ts","utils/topics.ts","hooks/useQuery.ts","components/TopicsBuilder/TopicsBuilder.tsx","components/TopicsDisplay/TopicCard/TopicCard.tsx","components/TopicsDisplay/TopicCountdown/TopicCountdown.tsx","components/TopicsDisplay/TopicsDisplay.tsx","components/App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","TemporalUnit","preset","breakpoints","colors","highlight","eerieBlack","registrationBlack","pastelGray","shadow","oliveDrab","lightText","darkText","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","space","sizes","avatar","radii","default","circle","shadows","card","text","fontFamily","lineHeight","fontWeight","display","fontSize","caps","textTransform","letterSpacing","variants","width","height","borderRadius","p","bg","boxShadow","link","color","nav","textDecoration","buttons","primary","variant","outline","secondary","destructive","styles","root","ThemedApp","children","theme","TopicsBuilderNavbar","px","alignItems","mx","sx","backgroundImage","orcFace","backgroundRepeat","backgroundPosition","backgroundSize","capitalize","str","length","substring","toUpperCase","toLowerCase","useTimedValue","defaultValue","temporaryValue","duration","useState","value","setValue","toggleValue","useCallback","setTimeout","formTopicsToFieldValues","formTopics","fieldValues","forEach","formTopic","idx","amount","unit","TopicsBuilderForm","displayUrl","setTopics","topics","useForm","defaultValues","handleSubmit","register","size","setSize","useClippy","setClipboard","copiedToggle","copiedText","onSubmit","values","i","push","addTopic","prevState","handleCopy","as","Array","from","_","k","map","topicId","topicText","topicAmount","topicUnit","key","my","flexWrap","py","pr","htmlFor","id","name","placeholder","data-idx","type","ref","MINUTES","Object","keys","pb","onClick","pl","backgroundColor","disabled","mt","pt","stringToTemporalUnit","def","SECONDS","strUppercase","topicsToFormTopics","topic","parseJsonStringToTopics","base64Str","mightBeStr","atob","mightBeTopicArray","JSON","parse","isArray","filter","mightBeTopic","Number","e","useQuery","URLSearchParams","useLocation","search","TopicsBuilder","query","get","setDisplayUrl","setFilteredTopics","formTopicsToTopics","useEffect","host","window","location","hostname","port","protocol","pathname","btoa","stringify","TopicCard","forwardRef","first","otherProps","TopicCountdown","currentTopic","markCurrentTopicAsCompleted","seconds","setSeconds","interval","setInterval","clearInterval","temporalUnit","HOURS","temporalUnitAndAmountToSeconds","TopicsDisplay","complete","incompleteTopics","useMemo","firstTopic","markFirstTopicAsCompleted","oldTopics","oldTopic","borderBottom","App","exact","path","to","Boolean","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,sC,oGCE/BC,E,gEC0IGC,EAtHO,CACpBC,YAAa,CAAC,OAAQ,OAAQ,QAC9BC,OAAQ,CACNC,UAAW,8BACXC,WAAY,UACZC,kBAAmB,OACnBC,WAAY,UACZC,OAAQ,UACRC,UAAW,UACXC,UAAW,UACXC,SAAU,WAEZC,MAAO,CACLC,KAAM,wBACNC,QAAS,UACTC,UAAW,oBAEbC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC5CC,YAAa,CACXJ,KAAM,IACNC,QAAS,IACTI,KAAM,KAERC,YAAa,CACXN,KAAM,IACNC,QAAS,MAEXM,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KACvCC,MAAO,CACLC,OAAQ,IAEVC,MAAO,CACLC,QAAS,EACTC,OAAQ,OAEVC,QAAS,CACPC,KAAM,+BAGRC,KAAM,CACJd,QAAS,CACPe,WAAY,UACZC,WAAY,UACZC,WAAY,WAEdC,QAAS,CACPH,WAAY,UACZE,WAAY,UACZD,WAAY,UACZG,SAAU,CAAC,EAAG,EAAG,IAEnBC,KAAM,CACJC,cAAe,YACfC,cAAe,UAGnBC,SAAU,CACRf,OAAQ,CACNgB,MAAO,SACPC,OAAQ,SACRC,aAAc,UAEhBb,KAAM,CACJc,EAAG,EACHC,GAAI,aACJC,UAAW,QAEbC,KAAM,CACJC,MAAO,WAETC,IAAK,CACHb,SAAU,EACVF,WAAY,OACZC,QAAS,eACTS,EAAG,EACHI,MAAO,UACPE,eAAgB,OAChB,wBAAyB,CACvBF,MAAO,aAIbG,QAAS,CACPC,QAAS,CACPC,QAAS,YACTjB,SAAU,EACVF,WAAY,OACZc,MAAO,aACPH,GAAI,UACJF,aAAc,WAEhBW,QAAS,CACPD,QAAS,kBACTL,MAAO,UACPH,GAAI,cACJC,UAAW,iBAEbS,UAAW,CACTF,QAAS,kBACTL,MAAO,aACPH,GAAI,aAENW,YAAa,CACXH,QAAS,kBACTL,MAAO,aACPH,GAAI,cACJX,WAAY,WAGhBuB,OAAQ,CACNC,KAAM,CACJ1B,WAAY,OACZE,WAAY,OACZD,WAAY,UC1HH0B,EAJ6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC1C,kBAAC,IAAD,CAAeC,MAAOA,GAAQD,I,+BCajBE,EAnBuB,kBACpC,kBAAC,IAAD,CAAMC,GAAI,EAAGlB,GAAG,aAAamB,WAAW,UACtC,kBAAC,IAAD,CACEhB,MAAM,YACNiB,GAAG,OACHrB,EAAG,EACHsB,GAAI,CACFC,gBAAgB,OAAD,OAASC,IAAT,KACfC,iBAAkB,YAClBC,mBAAoB,eACpBC,eAAgB,WAElB9B,MAAO,CAAC,EAAG,EAAI,IAVjB,6B,2CHJQtC,K,kBAAAA,E,kBAAAA,E,eAAAA,M,KIFL,IAAMqE,EAAa,SAACC,GACzB,OAAmB,IAAfA,EAAIC,OACCD,EAEH,GAAN,OAAUA,EAAIE,UAAU,EAAG,GAAGC,eAA9B,OAA8CH,EAC3CE,UAAU,GACVE,gBCcUC,EAlBO,SACpBC,EACAC,EACAC,GACI,IAAD,EACuBC,mBAASH,GADhC,mBACII,EADJ,KACWC,EADX,KAWH,MAAO,CAAED,QAAOE,YARIC,uBAAY,WAC9BF,EAASJ,GACTO,YAAW,WACTH,EAASL,KACRE,KACF,CAACF,EAAcE,EAAUD,MCOxBQ,EAA0B,SAACC,GAC/B,IAAMC,EAA2B,GAMjC,OALAD,EAAWE,SAAQ,SAACC,EAAWC,GAC7BH,EAAY,SAAD,OAAUG,EAAM,EAAhB,UAA4BD,EAAU7D,KACjD2D,EAAY,SAAD,OAAUG,EAAM,EAAhB,YAA8BD,EAAUE,OACnDJ,EAAY,SAAD,OAAUG,EAAM,EAAhB,UAA4BrB,EAAWoB,EAAUG,SAEvDL,GAwIMM,EArI6C,SAAC,GAItD,IAlByBtB,EAe9BuB,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,OACI,EAC+BC,YAAQ,CACzCC,cAAeb,EAAwBW,KADjCG,EADJ,EACIA,aAAcC,EADlB,EACkBA,SADlB,EAIoBrB,mBAASiB,EAAOzB,QAJpC,mBAIG8B,EAJH,KAISC,EAJT,OAKqBC,MAAhBC,EALL,sBAMqD7B,EACvD,OACA,UACA,KAHmB8B,EANjB,EAMIvB,YAAkCwB,EANtC,EAM+B1B,MAK7B2B,EAAWR,GAAa,SAACS,GAE7B,IADA,IAAMZ,EAAsB,GACnBa,EAAI,EAAGA,GAAKR,EAAMQ,GAAK,EAC9Bb,EAAOc,KAAK,CACVlF,KAAMgF,EAAO,SAAD,OAAUC,EAAV,UACZlB,OAAQiB,EAAO,SAAD,OAAUC,EAAV,YACdjB,KAAMgB,EAAO,SAAD,OAAUC,EAAV,UAAoBpC,gBAGpCsB,EAAUC,MAGNe,EAAW5B,uBAAY,WAC3BmB,GAAQ,SAACU,GAAD,OAAeA,EAAY,OAClC,IAEGC,EAAa9B,uBAAY,WACzBW,IACFU,EAAaV,GACbW,OAED,CAACA,EAAcX,EAAYU,IAE9B,OACE,kBAAC,IAAD,CAAKU,GAAG,OAAOP,SAAUA,EAAU/C,GAAI,IArDXW,EAsDF8B,EArDrBc,MAAMC,KAAK,CAAE7C,WAAU,SAAC8C,EAAGC,GAAJ,OAAUA,EAAI,MAqDVC,KAAI,SAAC7B,GACjC,IAAM8B,EAAO,gBAAY9B,GACnB+B,EAAS,UAAMD,EAAN,SACTE,EAAW,UAAMF,EAAN,WACXG,EAAS,UAAMH,EAAN,SACf,OACE,kBAAC,IAAD,CAAMI,IAAKJ,EAASK,GAAI,EAAGnF,GAAG,SAC5B,kBAAC,IAAD,CAAMoF,SAAS,OAAOlE,GAAI,EAAGmE,GAAI,GAC/B,kBAAC,IAAD,CAAKzF,MAAO,CAAC,EAAG,IAAQ0F,GAAI,CAAC,EAAG,IAC9B,kBAAC,IAAD,CAAOC,QAASR,GAAhB,QACA,kBAAC,IAAD,CACES,GAAIT,EACJU,KAAMV,EACNW,YAAY,uBACZC,WAAU3C,EACV4C,KAAK,OACLC,IAAKnC,KAGT,kBAAC,IAAD,CAAK9D,MAAO,CAAC,EAAG,EAAI,GAAIsB,GAAI,CAAC,EAAG,GAAImE,GAAI,CAAC,EAAG,IAC1C,kBAAC,IAAD,CAAOE,QAASP,GAAhB,UACA,kBAAC,IAAD,CACEQ,GAAIR,EACJS,KAAMT,EACN9C,aAAa,IACb0D,KAAK,SACLD,WAAU3C,EACV6C,IAAKnC,KAGT,kBAAC,IAAD,CAAK9D,MAAO,CAAC,EAAG,EAAI,GAAIsB,GAAI,CAAC,EAAG,GAAImE,GAAI,CAAC,EAAG,IAC1C,kBAAC,IAAD,CAAOE,QAASN,GAAhB,QACA,kBAAC,IAAD,CACEO,GAAIP,EACJQ,KAAMR,EACN/C,aAAcP,EAAWrE,EAAawI,SACtCH,WAAU3C,EACV6C,IAAKnC,GAEJqC,OAAOC,KAAK1I,GAAcuH,KAAI,SAAC3B,GAAD,OAC7B,4BAAQgC,IAAKhC,EAAKlB,eAAgBL,EAAWuB,cAQ3D,kBAAC,IAAD,CAAMkC,SAAS,OAAOC,GAAI,GACvB1B,EAAO,GACN,kBAAC,IAAD,CAAMxD,MAAM,WAAW8F,GAAI,EAAGrG,MAAO,GAArC,iEAEE,6BAFF,8EAOF,kBAAC,IAAD,CAAKA,MAAO,CAAC,EAAG,SACd,kBAAC,IAAD,CAAQsG,QAAS7B,EAAUuB,KAAK,SAAShG,MAAO,CAAC,EAAG,SAApD,cAID+D,EAAO,GACN,kBAAC,IAAD,CAAKwC,GAAI,CAAC,EAAG,GAAId,GAAI,CAAC,EAAG,GAAIzF,MAAO,CAAC,EAAG,SACtC,kBAAC,IAAD,CAAQsG,QAASjC,EAAUrE,MAAO,CAAC,EAAG,SAAtC,YAML+D,EAAO,GAAKP,GACX,kBAAC,IAAD,CAAKxD,MAAO,CAAC,EAAG,KACd,kBAAC,IAAD,CAAKA,MAAO,CAAC,EAAG,SACd,kBAAC,IAAD,CAAO2F,QAAQ,8BAAf,eACA,kBAAC,IAAD,CACEa,gBAAgB,QAChBC,UAAQ,EACRb,GAAG,6BACHlD,MAAOc,KAGX,kBAAC,IAAD,CAAQ8C,QAAS3B,EAAY+B,GAAI,EAAG1G,MAAO,CAAC,EAAG,SAC5CoE,GAEH,kBAAC,IAAD,CAAM7D,MAAM,WAAWoG,GAAI,EAAGN,GAAI,EAAGrG,MAAO,GAA5C,qDCzJG4G,EAAuB,SAClC5E,GAEkB,IADlB6E,EACiB,uDADGnJ,EAAaoJ,QAE3BC,GAAkB,OAAH/E,QAAG,IAAHA,OAAA,EAAAA,EAAKG,gBAAiB,GAC3C,OAAOzE,EAAaqJ,IAA8CF,GCJvDG,EAAqB,SAACtD,GACjC,OAAOA,EAAOuB,KAAe,SAACgC,GAAD,MAAY,CACvC3H,KAAM2H,EAAM3H,KACZ+D,OAAO,GAAD,OAAK4D,EAAM5D,QACjBC,KAAM2D,EAAM3D,UAYH4D,EAA0B,SAACC,GACtC,IACE,IAAMC,EAAaC,KAAI,OAACF,QAAD,IAACA,IAAa,IAC/BG,EAAoBC,KAAKC,MAAL,OAAWJ,QAAX,IAAWA,IAAc,MACnD,OAAKvC,MAAM4C,QAAQH,GAGZA,EACJI,QAAO,SAACC,GAAD,OAAkBA,EAAarI,MAAQqI,EAAatE,UAC3D4B,KAAW,SAAC0C,GAAD,MAAmB,CAC7BrI,KAAMqI,EAAarI,KACnB+D,OAAQuE,OAAOD,EAAatE,QAC5BC,KAAMsD,EAAqBe,EAAarE,UAPnC,GAST,MAAOuE,GACP,MAAO,KC5BIC,EAJE,WACf,OAAO,IAAIC,gBAAgBC,cAAcC,SCyD5BC,EA/CiB,WAC9B,IAAMC,EAAQL,IADsB,EAERrF,mBAC1ByE,EAAwBiB,EAAMC,IAAI,WAAWV,QAC3C,SAACT,GAAD,OAAWA,EAAM5D,OAAS,GAAoB,KAAf4D,EAAM3H,SAJL,mBAE7BoE,EAF6B,KAErBD,EAFqB,OAOAhB,mBAAwB,MAPxB,mBAO7Be,EAP6B,KAOjB6E,EAPiB,KAS9BC,EAAoBzF,uBAAY,SAACG,GACrCS,EFZ8B,SAACT,GACjC,OAAOA,EAAWiC,KAAW,SAAC9B,GAAD,MAAgB,CAC3C7D,KAAM6D,EAAU7D,KAChB+D,OAAQuE,OAAOzE,EAAUE,QACzBC,KAAMH,EAAUG,SESdiF,CAAmBvF,GAAY0E,QAC7B,SAACT,GAAD,OAAWA,EAAM3H,MAAQ2H,EAAM5D,aAGlC,IAkBH,OAhBAmF,qBAAU,WACR,GAAI9E,EAAOzB,OAAS,EAAG,CACrB,IAAIwG,EAAOC,OAAOC,SAASC,SACE,KAAzBF,OAAOC,SAASE,OAClBJ,EAAI,UAAMC,OAAOC,SAASC,SAAtB,YAAkCF,OAAOC,SAASE,OAExDR,EAAc,GAAD,OACRK,OAAOC,SAASG,SADR,aACqBL,GADrB,OAETC,OAAOC,SAASI,SAFP,2BAGQC,KAAKzB,KAAK0B,UAAUvF,WAGzC2E,EAAc,QAEf,CAAC3E,IAGF,kBAAC,IAAD,CAAKtD,GAAG,aAAaH,OAAO,QAAQD,MAAM,SACxC,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAKwB,GAAG,OAAOxB,MAAO,CAAC,EAAG,EAAI,IAC5B,kBAAC,EAAD,CACEwD,WAAYA,EACZE,OAAQsD,EAAmBtD,GAC3BD,UAAW6E,O,gBC7BNY,EAf6BC,sBAC1C,WAAkClD,GAAlC,IAAGmD,EAAH,EAAGA,MAAOnC,EAAV,EAAUA,MAAUoC,EAApB,wCACE,kBAAC,IAAD,eACEjJ,GAAIgJ,EAAQ,YAAc,SAC1B9H,GAAI,EACJmE,GAAI,EACJQ,IAAKA,EACLjG,MAAO,GACHqJ,GAEJ,kBAAC,IAAD,CAAS9I,MAAM,aAAa0G,EAAM3H,UCyDzBgK,EAhEuC,SAAC,GAGhD,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,4BACI,EAC0B/G,oBAAU,GADpC,mBACGgH,EADH,KACYC,EADZ,KA2BJ,OAxBAlB,qBAAU,WACR,IAAImB,EAAWC,aAAY,WACzBF,GAAW,SAAAD,GACT,OAAIA,EAAU,EACLA,EAEO,IAAZA,GACFD,IACOC,GAEFA,EAAU,OAElB,KACH,OAAO,kBAAMI,cAAcF,MAC1B,CAACH,IAEJhB,qBAAU,WACR,IAAMhG,ELzBoC,SAC5Ca,EACAyG,GAEA,IAAKzG,IAAWyG,EACd,OAAO,EAET,OAAQA,GACN,KAAKpM,EAAaoJ,QAChB,OAAOzD,EACT,KAAK3F,EAAawI,QAChB,OAAO,GAAK7C,EACd,KAAK3F,EAAaqM,MAChB,OAAO,KAAU1G,GKYF2G,CAA8B,OAC7CT,QAD6C,IAC7CA,OAD6C,EAC7CA,EAAclG,OAD+B,OAE7CkG,QAF6C,IAE7CA,OAF6C,EAE7CA,EAAcjG,MAEhBoG,EAAWlH,KACV,CAAC+G,IAEAE,EAAU,GAAsB,OAAjBF,EAEf,kBAAC,IAAD,CACEnJ,GAAG,aACHkB,GAAI,EACJmE,GAAI,EACJhE,GAAI,CACFC,gBAAgB,OAAD,OAASC,IAAT,KACfC,iBAAkB,YAClBC,mBAAoB,eACpBC,eAAgB,YAGlB,kBAAC,IAAD,CAASvB,MAAM,aAAf,sBAKJ,kBAAC,IAAD,CACEH,GAAG,aACHkB,GAAI,EACJmE,GAAI,EACJhE,GAAI,CACFC,gBAAgB,OAAD,OAASC,IAAT,KACfC,iBAAkB,YAClBC,mBAAoB,eACpBC,eAAgB,YAGlB,kBAAC,IAAD,CAASvB,MAAM,aAAakJ,EAA5B,iBCZSQ,EAnDiB,WAC9B,IAAM9B,EAAQL,IADsB,EAERrF,mBAC1ByE,EAAwBiB,EAAMC,IAAI,WAC/BV,QAAO,SAAAT,GAAK,OAAIA,EAAM5D,OAAS,GAAoB,KAAf4D,EAAM3H,QAC1C2F,KAAI,SAACgC,EAAO7D,GAAR,mBAAC,eAAqB6D,GAAtB,IAA6BiD,UAAU,EAAOtE,GAAIxC,QALvB,mBAE7BM,EAF6B,KAErBD,EAFqB,KAO9B0G,EAAmBC,mBACvB,kBAAM1G,EAAOgE,QAAO,SAAAT,GAAK,OAAKA,EAAMiD,cACpC,CAACxG,IAEG2G,EAAaD,mBACjB,kBAAOD,EAAiBlI,OAAS,EAAIkI,EAAiB,GAAK,OAC3D,CAACA,IAEGG,EAA4BzH,uBAAY,WACvCwH,GAGL5G,GAAU,SAAA8G,GAAS,OACjBA,EAAUtF,KAAI,SAAAuF,GACZ,OAAIA,EAAS5E,KAAOyE,EAAWzE,GACtB,2BAAK4E,GAAZ,IAAsBN,UAAU,IAE3BM,UAGV,CAACH,IAEJ,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEd,aAAcc,EACdb,4BAA6Bc,IAE9BH,EAAiBlF,KAAI,SAACgC,EAAO7D,GAAR,OACpB,kBAAC,EAAD,CACEkC,IAAG,gBAAWlC,GACdgG,MAAe,IAARhG,EACP3B,GACE2B,IAAQ+G,EAAiBlI,OAAS,EAC9B,CAAEwI,aAAc,mBAChB,GAENxD,MAAOA,SCtBFyD,EAlBO,kBACpB,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,0BACf,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,kCACT,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,IAAD,CAAUC,GAAE,gCCXFC,QACW,cAA7BpC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASmC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c31c418c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orc_face.4899ed6e.png\";","import { ChangeEvent } from \"react\";\n\nexport enum TemporalUnit {\n  SECONDS = \"SECONDS\",\n  MINUTES = \"MINUTES\",\n  HOURS = \"HOURS\"\n}\n\nexport type FormTopic = {\n  text: string;\n  amount: string;\n  unit: TemporalUnit;\n};\n\nexport type Topic = {\n  text: string;\n  amount: number;\n  unit: TemporalUnit;\n};\n\nexport type DisplayTopic = {\n  id: number;\n  complete: boolean;\n} & Topic;\n\nexport type FormChangeHandler = (\n  event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLSelectElement>\n) => void;\n","/*\nThe MIT License (MIT)\nCopyright (c) 2015 – 2019 Brent Jackson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n */\nexport const preset = {\n  breakpoints: [\"40em\", \"52em\", \"64em\"],\n  colors: {\n    highlight: \"hsla(205, 100%, 40%, 0.125)\",\n    eerieBlack: \"#1d1e1e\",\n    registrationBlack: \"#000\",\n    pastelGray: \"#cecece\",\n    shadow: \"#867962\",\n    oliveDrab: \"#6b8311\",\n    lightText: \"#cecece\",\n    darkText: \"#1d1e1e\"\n  },\n  fonts: {\n    body: \"system-ui, sans-serif\",\n    heading: \"inherit\",\n    monospace: \"Menlo, monospace\"\n  },\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n  fontWeights: {\n    body: 400,\n    heading: 700,\n    bold: 700\n  },\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  sizes: {\n    avatar: 48\n  },\n  radii: {\n    default: 4,\n    circle: 99999\n  },\n  shadows: {\n    card: \"0 0 4px rgba(0, 0, 0, .125)\"\n  },\n  // rebass variants\n  text: {\n    heading: {\n      fontFamily: \"heading\",\n      lineHeight: \"heading\",\n      fontWeight: \"heading\"\n    },\n    display: {\n      fontFamily: \"heading\",\n      fontWeight: \"heading\",\n      lineHeight: \"heading\",\n      fontSize: [5, 6, 7]\n    },\n    caps: {\n      textTransform: \"uppercase\",\n      letterSpacing: \"0.1em\"\n    }\n  },\n  variants: {\n    avatar: {\n      width: \"avatar\",\n      height: \"avatar\",\n      borderRadius: \"circle\"\n    },\n    card: {\n      p: 2,\n      bg: \"background\",\n      boxShadow: \"card\"\n    },\n    link: {\n      color: \"primary\"\n    },\n    nav: {\n      fontSize: 1,\n      fontWeight: \"bold\",\n      display: \"inline-block\",\n      p: 2,\n      color: \"inherit\",\n      textDecoration: \"none\",\n      \":hover,:focus,.active\": {\n        color: \"primary\"\n      }\n    }\n  },\n  buttons: {\n    primary: {\n      variant: \"text.caps\",\n      fontSize: 2,\n      fontWeight: \"bold\",\n      color: \"background\",\n      bg: \"primary\",\n      borderRadius: \"default\"\n    },\n    outline: {\n      variant: \"buttons.primary\",\n      color: \"primary\",\n      bg: \"transparent\",\n      boxShadow: \"inset 0 0 2px\"\n    },\n    secondary: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"secondary\"\n    },\n    destructive: {\n      variant: \"buttons.primary\",\n      color: \"background\",\n      bg: \"destructive\",\n      fontWeight: \"normal\"\n    }\n  },\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      fontWeight: \"body\",\n      lineHeight: \"body\"\n    }\n  }\n};\n\nexport default preset;\n","import React from \"react\";\nimport { ThemeProvider } from \"emotion-theming\";\n\nimport theme from \"./preset\";\n\ntype ThemedAppProps = {\n  children: React.ReactNode;\n};\n\nconst ThemedApp: React.FC<ThemedAppProps> = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default ThemedApp;\n","import React from \"react\";\nimport { Flex, Heading } from \"rebass\";\nimport orcFace from \"../../../assets/orc_face.png\";\n\nconst TopicsBuilderNavbar: React.FC = () => (\n  <Flex px={2} bg=\"eerieBlack\" alignItems=\"center\">\n    <Heading\n      color=\"lightText\"\n      mx=\"auto\"\n      p={2}\n      sx={{\n        backgroundImage: `url(${orcFace})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center right\",\n        backgroundSize: \"contain\"\n      }}\n      width={[1, 3 / 4]}\n    >\n      Awetosis Topics Builder\n    </Heading>\n  </Flex>\n);\n\nexport default TopicsBuilderNavbar;\n","export const capitalize = (str: string): string => {\n  if (str.length === 0) {\n    return str;\n  }\n  return `${str.substring(0, 1).toUpperCase()}${str\n    .substring(1)\n    .toLowerCase()}`;\n};\n","import { useCallback, useState } from \"react\";\n\nconst useTimedValue = (\n  defaultValue: string,\n  temporaryValue: string,\n  duration: number\n) => {\n  const [value, setValue] = useState(defaultValue);\n\n  const toggleValue = useCallback(() => {\n    setValue(temporaryValue);\n    setTimeout(() => {\n      setValue(defaultValue);\n    }, duration);\n  }, [defaultValue, duration, temporaryValue]);\n\n  // return value;\n  return { value, toggleValue };\n};\n\nexport default useTimedValue;\n","import React, { useCallback, useState } from \"react\";\nimport { Box, Button, Card, Flex, Text } from \"rebass\";\nimport { Input, Label, Select } from \"@rebass/forms\";\nimport { useForm } from \"react-hook-form\";\nimport { FieldValues } from \"react-hook-form\";\nimport useClippy from \"use-clippy\";\n\nimport { FormTopic, TemporalUnit } from \"../../../types\";\nimport { capitalize } from \"../../../utils/strings\";\nimport useTimedValue from \"../../../hooks/useTimedValue\";\n\ntype TopicsBuilderFormProps = {\n  displayUrl: string | null;\n  setTopics: (topics: FormTopic[]) => void;\n  topics: FormTopic[];\n};\n\nconst createArrayWithNumbers = (length: number): number[] => {\n  return Array.from({ length }, (_, k) => k + 1);\n};\n\nconst formTopicsToFieldValues = (formTopics: FormTopic[]): FieldValues => {\n  const fieldValues: FieldValues = {};\n  formTopics.forEach((formTopic, idx) => {\n    fieldValues[`topic-${idx + 1}-text`] = formTopic.text;\n    fieldValues[`topic-${idx + 1}-amount`] = formTopic.amount;\n    fieldValues[`topic-${idx + 1}-unit`] = capitalize(formTopic.unit);\n  });\n  return fieldValues;\n};\n\nconst TopicsBuilderForm: React.FC<TopicsBuilderFormProps> = ({\n  displayUrl,\n  setTopics,\n  topics,\n}) => {\n  const { handleSubmit, register } = useForm({\n    defaultValues: formTopicsToFieldValues(topics),\n  });\n  const [size, setSize] = useState(topics.length);\n  const [, setClipboard] = useClippy();\n  const { toggleValue: copiedToggle, value: copiedText } = useTimedValue(\n    \"Copy\",\n    \"Copied!\",\n    3000\n  );\n  const onSubmit = handleSubmit((values: FieldValues) => {\n    const topics: FormTopic[] = [];\n    for (let i = 1; i <= size; i += 1) {\n      topics.push({\n        text: values[`topic-${i}-text`],\n        amount: values[`topic-${i}-amount`],\n        unit: values[`topic-${i}-unit`].toUpperCase(),\n      });\n    }\n    setTopics(topics);\n  });\n\n  const addTopic = useCallback(() => {\n    setSize((prevState) => prevState + 1);\n  }, []);\n\n  const handleCopy = useCallback(() => {\n    if (displayUrl) {\n      setClipboard(displayUrl);\n      copiedToggle();\n    }\n  }, [copiedToggle, displayUrl, setClipboard]);\n\n  return (\n    <Box as=\"form\" onSubmit={onSubmit} px={2}>\n      {createArrayWithNumbers(size).map((idx) => {\n        const topicId = `topic-${idx}`;\n        const topicText = `${topicId}-text`;\n        const topicAmount = `${topicId}-amount`;\n        const topicUnit = `${topicId}-unit`;\n        return (\n          <Card key={topicId} my={2} bg=\"white\">\n            <Flex flexWrap=\"wrap\" px={2} py={2}>\n              <Box width={[1, 1 / 2]} pr={[0, 2]}>\n                <Label htmlFor={topicText}>Name</Label>\n                <Input\n                  id={topicText}\n                  name={topicText}\n                  placeholder=\"Topic Text Goes Here\"\n                  data-idx={idx}\n                  type=\"text\"\n                  ref={register}\n                />\n              </Box>\n              <Box width={[1, 1 / 4]} px={[0, 2]} py={[2, 0]}>\n                <Label htmlFor={topicAmount}>Amount</Label>\n                <Input\n                  id={topicAmount}\n                  name={topicAmount}\n                  defaultValue=\"0\"\n                  type=\"number\"\n                  data-idx={idx}\n                  ref={register}\n                />\n              </Box>\n              <Box width={[1, 1 / 4]} px={[0, 2]} py={[2, 0]}>\n                <Label htmlFor={topicUnit}>Unit</Label>\n                <Select\n                  id={topicUnit}\n                  name={topicUnit}\n                  defaultValue={capitalize(TemporalUnit.MINUTES)}\n                  data-idx={idx}\n                  ref={register}\n                >\n                  {Object.keys(TemporalUnit).map((unit) => (\n                    <option key={unit.toLowerCase()}>{capitalize(unit)}</option>\n                  ))}\n                </Select>\n              </Box>\n            </Flex>\n          </Card>\n        );\n      })}\n      <Flex flexWrap=\"wrap\" py={2}>\n        {size > 0 && (\n          <Text color=\"darkText\" pb={2} width={1}>\n            Leave the name field blank to have the builder ignore a topic.\n            <br />\n            You need at least one topic available in order to generate the topic\n            view.\n          </Text>\n        )}\n        <Box width={[1, \"auto\"]}>\n          <Button onClick={addTopic} type=\"button\" width={[1, \"auto\"]}>\n            Add Topic\n          </Button>\n        </Box>\n        {size > 0 && (\n          <Box pl={[0, 2]} py={[2, 0]} width={[1, \"auto\"]}>\n            <Button onClick={onSubmit} width={[1, \"auto\"]}>\n              Submit\n            </Button>\n          </Box>\n        )}\n      </Flex>\n      {size > 0 && displayUrl && (\n        <Box width={[1, 1 / 2]}>\n          <Box width={[1, \"auto\"]}>\n            <Label htmlFor=\"awetosis-topic-display-url\">Display URL</Label>\n            <Input\n              backgroundColor=\"white\"\n              disabled\n              id=\"awetosis-topic-display-url\"\n              value={displayUrl}\n            />\n          </Box>\n          <Button onClick={handleCopy} mt={2} width={[1, \"auto\"]}>\n            {copiedText}\n          </Button>\n          <Text color=\"darkText\" pt={2} pb={2} width={1}>\n            Paste the URL into a source in StreamLabs OBS.\n          </Text>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default TopicsBuilderForm;\n","import { TemporalUnit } from \"../types\";\n\nexport const stringToTemporalUnit = (\n  str?: string,\n  def: TemporalUnit = TemporalUnit.SECONDS\n): TemporalUnit => {\n  const strUppercase = str?.toUpperCase() || \"\";\n  return TemporalUnit[strUppercase as keyof typeof TemporalUnit] || def;\n};\n\nexport const temporalUnitAndAmountToSeconds = (\n  amount?: number,\n  temporalUnit?: TemporalUnit\n): number => {\n  if (!amount || !temporalUnit) {\n    return 0;\n  }\n  switch (temporalUnit) {\n    case TemporalUnit.SECONDS:\n      return amount;\n    case TemporalUnit.MINUTES:\n      return 60 * amount;\n    case TemporalUnit.HOURS:\n      return 60 * 60 * amount;\n  }\n};\n","import { FormTopic, Topic } from \"../types\";\nimport { stringToTemporalUnit } from \"./temporalUnits\";\n\nexport const topicsToFormTopics = (topics: Topic[]): FormTopic[] => {\n  return topics.map<FormTopic>((topic) => ({\n    text: topic.text,\n    amount: `${topic.amount}`,\n    unit: topic.unit,\n  }));\n};\n\nexport const formTopicsToTopics = (formTopics: FormTopic[]): Topic[] => {\n  return formTopics.map<Topic>((formTopic) => ({\n    text: formTopic.text,\n    amount: Number(formTopic.amount),\n    unit: formTopic.unit,\n  }));\n};\n\nexport const parseJsonStringToTopics = (base64Str: string | null): Topic[] => {\n  try {\n    const mightBeStr = atob(base64Str ?? \"\");\n    const mightBeTopicArray = JSON.parse(mightBeStr ?? \"[]\");\n    if (!Array.isArray(mightBeTopicArray)) {\n      return [];\n    }\n    return mightBeTopicArray\n      .filter((mightBeTopic) => mightBeTopic.text && mightBeTopic.amount)\n      .map<Topic>((mightBeTopic) => ({\n        text: mightBeTopic.text,\n        amount: Number(mightBeTopic.amount),\n        unit: stringToTemporalUnit(mightBeTopic.unit),\n      }));\n  } catch (e) {\n    return [];\n  }\n};\n","import { useLocation } from \"react-router-dom\";\n\nconst useQuery = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport default useQuery;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Box } from \"rebass\";\n\nimport TopicsBuilderNavbar from \"./TopicsBuilderNavbar\";\nimport TopicsBuilderForm from \"./TopicsBuilderForm\";\nimport { FormTopic, Topic } from \"../../types\";\nimport {\n  formTopicsToTopics,\n  parseJsonStringToTopics,\n  topicsToFormTopics,\n} from \"../../utils/topics\";\nimport useQuery from \"../../hooks/useQuery\";\n\nconst TopicsBuilder: React.FC = () => {\n  const query = useQuery();\n  const [topics, setTopics] = useState<Topic[]>(\n    parseJsonStringToTopics(query.get(\"topics\")).filter(\n      (topic) => topic.amount > 0 && topic.text !== \"\"\n    )\n  );\n  const [displayUrl, setDisplayUrl] = useState<string | null>(null);\n\n  const setFilteredTopics = useCallback((formTopics: FormTopic[]) => {\n    setTopics(\n      formTopicsToTopics(formTopics).filter(\n        (topic) => topic.text && topic.amount\n      )\n    );\n  }, []);\n\n  useEffect(() => {\n    if (topics.length > 0) {\n      let host = window.location.hostname;\n      if (window.location.port !== \"\") {\n        host = `${window.location.hostname}:${window.location.port}`;\n      }\n      setDisplayUrl(\n        `${window.location.protocol}//${host}${\n          window.location.pathname\n        }/display?topics=${btoa(JSON.stringify(topics))}`\n      );\n    } else {\n      setDisplayUrl(null);\n    }\n  }, [topics]);\n\n  return (\n    <Box bg=\"pastelGray\" height=\"100vh\" width=\"100vw\">\n      <TopicsBuilderNavbar />\n      <Box mx=\"auto\" width={[1, 3 / 4]}>\n        <TopicsBuilderForm\n          displayUrl={displayUrl}\n          topics={topicsToFormTopics(topics)}\n          setTopics={setFilteredTopics}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default TopicsBuilder;\n","import React, { forwardRef } from \"react\";\nimport { BoxProps, Card, Heading } from \"rebass\";\nimport { Topic } from \"../../../types\";\n\ntype TopicCardProps = {\n  first: boolean;\n  topic: Topic;\n} & BoxProps;\n\nconst TopicCard: React.FC<TopicCardProps> = forwardRef(\n  ({ first, topic, ...otherProps }, ref) => (\n    <Card\n      bg={first ? \"oliveDrab\" : \"shadow\"}\n      px={2}\n      py={2}\n      ref={ref}\n      width={1}\n      {...otherProps}\n    >\n      <Heading color=\"lightText\">{topic.text}</Heading>\n    </Card>\n  )\n);\n\nexport default TopicCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading } from \"rebass\";\n\nimport orcFace from \"../../../assets/orc_face.png\";\nimport { DisplayTopic } from \"../../../types\";\nimport { temporalUnitAndAmountToSeconds } from \"../../../utils/temporalUnits\";\n\ntype TopicCountdownProps = {\n  currentTopic: DisplayTopic | null;\n  markCurrentTopicAsCompleted: () => void;\n};\n\nconst TopicCountdown: React.FC<TopicCountdownProps> = ({\n  currentTopic,\n  markCurrentTopicAsCompleted\n}) => {\n  const [seconds, setSeconds] = useState(-1);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setSeconds(seconds => {\n        if (seconds < 0) {\n          return seconds;\n        }\n        if (seconds === 0) {\n          markCurrentTopicAsCompleted();\n          return seconds;\n        }\n        return seconds - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [markCurrentTopicAsCompleted]);\n\n  useEffect(() => {\n    const duration = temporalUnitAndAmountToSeconds(\n      currentTopic?.amount,\n      currentTopic?.unit\n    );\n    setSeconds(duration);\n  }, [currentTopic]);\n\n  if (seconds < 0 || currentTopic === null) {\n    return (\n      <Box\n        bg=\"eerieBlack\"\n        px={2}\n        py={2}\n        sx={{\n          backgroundImage: `url(${orcFace})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center right\",\n          backgroundSize: \"contain\"\n        }}\n      >\n        <Heading color=\"lightText\">No Current Topics</Heading>\n      </Box>\n    );\n  }\n  return (\n    <Box\n      bg=\"eerieBlack\"\n      px={2}\n      py={2}\n      sx={{\n        backgroundImage: `url(${orcFace})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center right\",\n        backgroundSize: \"contain\"\n      }}\n    >\n      <Heading color=\"lightText\">{seconds}s Remaining</Heading>\n    </Box>\n  );\n};\n\nexport default TopicCountdown;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Box } from \"rebass\";\nimport { parseJsonStringToTopics } from \"../../utils/topics\";\nimport TopicCard from \"./TopicCard\";\nimport { DisplayTopic } from \"../../types\";\nimport TopicCountdown from \"./TopicCountdown\";\nimport useQuery from \"../../hooks/useQuery\";\n\nconst TopicsDisplay: React.FC = () => {\n  const query = useQuery();\n  const [topics, setTopics] = useState<DisplayTopic[]>(\n    parseJsonStringToTopics(query.get(\"topics\"))\n      .filter(topic => topic.amount > 0 && topic.text !== \"\")\n      .map((topic, idx) => ({ ...topic, complete: false, id: idx }))\n  );\n  const incompleteTopics = useMemo(\n    () => topics.filter(topic => !topic.complete),\n    [topics]\n  );\n  const firstTopic = useMemo(\n    () => (incompleteTopics.length > 0 ? incompleteTopics[0] : null),\n    [incompleteTopics]\n  );\n  const markFirstTopicAsCompleted = useCallback(() => {\n    if (!firstTopic) {\n      return;\n    }\n    setTopics(oldTopics =>\n      oldTopics.map(oldTopic => {\n        if (oldTopic.id === firstTopic.id) {\n          return { ...oldTopic, complete: true };\n        }\n        return oldTopic;\n      })\n    );\n  }, [firstTopic]);\n\n  return (\n    <Box>\n      <TopicCountdown\n        currentTopic={firstTopic}\n        markCurrentTopicAsCompleted={markFirstTopicAsCompleted}\n      />\n      {incompleteTopics.map((topic, idx) => (\n        <TopicCard\n          key={`topic-${idx}`}\n          first={idx === 0}\n          sx={\n            idx !== incompleteTopics.length - 1\n              ? { borderBottom: \"1px solid black\" }\n              : {}\n          }\n          topic={topic}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default TopicsDisplay;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport ThemedApp from \"../ThemedApp\";\nimport TopicsBuilder from \"../TopicsBuilder\";\nimport TopicsDisplay from \"../TopicsDisplay\";\n\nconst App: React.FC = () => (\n  <ThemedApp>\n    <Router>\n      <Switch>\n        <Route exact path={`/awetosis-topic-widget`}>\n          <TopicsBuilder />\n        </Route>\n        <Route path={`/awetosis-topic-widget/display`}>\n          <TopicsDisplay />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to={`/awetosis-topic-widget`} />\n        </Route>\n      </Switch>\n    </Router>\n  </ThemedApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}